using Test
using LinearAlgebra, LinearMaps
using IterativePerturbationTheory
using SparseArrays

N = 1000
M = diagm(1:N) + 1e-2rand(N, N)
S = (M + M') / 2
TOL = 1e-15

### FCI submatrix of H20, with degeneracies 
W = Meta.parse("[-75.67999736538026 -5.375326183265698e-16 -5.375326183265696e-16 3.4877792178350525e-16 3.487779217835053e-16 6.258630536118415e-7 6.258630536049026e-7 -4.6319224863875947e-7 -4.6319224863875947e-7 -8.011809018394238e-7; -5.126124922045287e-16 -75.24818626744668 0.03816660844794528 -4.836845752981736e-7 3.5567960489522666e-8 -8.454823212262494e-16 -1.327698449917913e-16 5.5857393942725e-17 1.220402809959694e-16 1.039600855985283e-15; -5.126124922045287e-16 0.03816660844794528 -75.24818626744667 3.5567960489522666e-8 -4.836845752981735e-7 -1.327698449917913e-16 -8.454823212262492e-16 1.220402809959694e-16 5.5857393942725e-17 -1.797812641881797e-16; 3.892602952629698e-16 -4.836845752385981e-7 3.5567960489522666e-8 -75.16644506919486 0.02436536240167469 -1.1413345777462547e-16 -1.8031634482786982e-16 -4.703412597648068e-16 -3.5220201885730807e-16 1.5228941483324098e-16; 3.8926029526296978e-16 3.5567960489522666e-8 -4.836845752385981e-7 0.02436536240167469 -75.16644506919486 -1.8031634482786982e-16 -1.1413345777462547e-16 -3.522020188573081e-16 -4.703412597648068e-16 2.5239007893778926e-16; 6.258630536673526e-7 -8.387311187593403e-16 -1.327698449917913e-16 -1.1413345777462547e-16 -1.8031634482786982e-16 -75.11440286228817 0.07115932240975063 5.869147447755448e-8 -4.1313573979941043e-7 2.6961648841647506e-7; 6.258630536673526e-7 -1.327698449917913e-16 -8.387311187593403e-16 -1.8031634482786982e-16 -1.1413345777462547e-16 0.07115932240975063 -75.11440286228816 -4.1313573979941043e-7 5.869147447755448e-8 -2.1756337263150556e-8; -4.6319224864427434e-7 5.5857393942725e-17 1.2204028099596937e-16 -4.703412597648068e-16 -3.4545081639039907e-16 5.869147447755448e-8 -4.1313573973983506e-7 -75.04224413393491 0.06912514136759439 -0.04546188191453919; -4.6319224864427434e-7 1.2204028099596937e-16 5.5857393942725e-17 -3.4545081639039917e-16 -4.703412597648068e-16 -4.131357397398351e-7 5.869147447755448e-8 0.06912514136759439 -75.0422441339349 0.0037386272661824073; -8.011809018595718e-7 1.0455840277382393e-15 -1.797812641881797e-16 1.5228941483324098e-16 2.5239007893778926e-16 2.696164884393443e-7 -2.1756337263150556e-8 -0.04546188191453919 0.0037386272661824073 -74.97949289986464]") |> eval


for A in (M, S)

    symm = issymmetric(A) ? "symmetric" : "non-symmetric"
    eig = eigen(A)

    for k in (1, 5, N)
        @time @testset "Compute $k eigenvalues of a $symm matrix of size $N." begin
            Z = ipt(A, k; tol = TOL)
            @test Z.values ≈ eig.values[1:k]
            @test A * Z.vectors ≈ Z.vectors * Diagonal(Z.values)
        end
    end
end


@testset "Sparse Array" begin
    S = spdiagm(1:N) + .1*sprand(N,N, .01)
    eig = eigen(Matrix(S))
    Z = ipt(S; tol = TOL, lift_degeneracies = true)
    @test Z.values ≈ eig.values
    @test S * Z.vectors ≈ Z.vectors * Diagonal(Z.values)
end


@testset "Degenerate eigenvalues (H20)" begin
    eig = eigen(W)
    Z = ipt(W, 5; tol = TOL, lift_degeneracies = true)
    @test Z.values ≈ eig.values[1:5]
    W * Z.vectors ≈ Z.vectors * Diagonal(Z.values)
end

@testset "Linear Map" begin
    L = LinearMap(W)
    eig = eigen(W)
    Z = ipt!(L, 5; tol = TOL, lift_degeneracies = true)
    @test Z.values ≈ eig.values[1:5]
    @test Matrix(L * Z.vectors) ≈ Z.vectors * Diagonal(Z.values)
end
